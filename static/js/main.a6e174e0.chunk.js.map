{"version":3,"sources":["PlayBoard/playboard.js","HomePage/homepage.js","MemoryGame/memoryGame.js","App.js","index.js"],"names":["categoryMap","apple","apple_dark","apple_empty","lemon","orange","orange_dark","watermelon","watermelon_dark","selectedCard","undefined","clickEnabled","initilized","intervalId","initilizeData","output","id","visibility","sideVisible","categoryList","forEach","item","randomNumber","Math","floor","random","card","getTime","timer","sec","min","parseInt","KeyValue","_ref","title","value","react_default","a","createElement","className","Board","_ref2","cardClickHandler","elements","map","playboard_Card","key","WinnerCard","_ref3","onStartAgainClick","onClick","Card","_ref4","cardClasses","classnames","Object","defineProperty","hidden-card","back-card","concat","PlayBoard","_useState","useState","_useState2","slicedToArray","setElements","_useState3","_useState4","matches","setMatches","_useState5","_useState6","count","setCount","_useState7","_useState8","won","setWon","_useState9","_useState10","setTimer","setInterval","prevTimer","setTimeout","newElements","toConsumableArray","index","flipAll","scoreMap","playboard_KeyValue","assign","playboard_WinnerCard","playboard_Board","clearInterval","indexArray","hideElements","flipBackElements","HomePage","setStarted","MemoryGame","started","PlayBoard_playboard","HomePage_homepage","App","memoryGame","ReactDOM","render","src_App","document","getElementById"],"mappings":"mSAKIA,SAAc,CACdC,MAAS,aACTC,WAAc,kBACdC,YAAe,mBACfC,MAAS,aACTC,OAAU,cACVC,YAAe,mBACfC,WAAc,kBACdC,gBAAmB,yBAGnBC,OAAeC,EACfC,GAAe,EACfC,GAAa,EACbC,OAAaH,EAEXI,EAAgB,WAClB,IAAMC,EAAQ,CACV,CACIC,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,EACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,SACf,CACEF,GAAI,GACJC,WAAY,UACZC,YAAa,UAGfC,EAAe,CAAC,QAAQ,aAAa,cAAc,kBAAkB,aAAa,cAAc,SAAS,SAe/G,OAdAA,EAAaC,QAAQ,SAACC,GAElB,IADA,IAAIC,EAAgBC,KAAKC,MAAqB,GAAfD,KAAKE,UAC9BV,EAAOO,GAAcI,MACvBJ,GAAgBA,EAAe,GAAK,GAExCP,EAAOO,GAAcI,KAAO1B,EAAYqB,KAE5CF,EAAaC,QAAQ,SAACC,GAElB,IADA,IAAIC,EAAgBC,KAAKC,MAAqB,GAAfD,KAAKE,UAC9BV,EAAOO,GAAcI,MACvBJ,GAAgBA,EAAe,GAAK,GAExCP,EAAOO,GAAcI,KAAO1B,EAAYqB,KAErCN,GAGLY,EAAU,SAACC,GACb,IAAMC,EAAMD,EAAQ,GACdE,EAAMC,SAASH,EAAQ,IAC7B,OAAQE,EAAI,EAAIA,EAAK,IAAMA,GAAO,OAASD,EAAK,EAAIA,EAAK,IAAMA,IAgB7DG,EAAW,SAAAC,GAAkB,IAAhBC,EAAgBD,EAAhBC,MAAMC,EAAUF,EAAVE,MACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOL,GACtBE,EAAAC,EAAAC,cAAA,WAAMH,KAKZK,EAAQ,SAAAC,GAAkC,IAAhCC,EAAgCD,EAAhCC,iBACZ,OAD4CD,EAAdE,SACdC,IAAI,SAACvB,GACjB,OAAOe,EAAAC,EAAAC,cAACO,EAAD,CAAMC,IAAKzB,EAAKL,GAAIK,KAAMA,EAAMqB,iBAAkBA,OAI3DK,EAAa,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,kBACjB,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeW,QAASD,GAAvC,iBAKNE,EAAO,SAAAC,GAA8B,IAA5B/B,EAA4B+B,EAA5B/B,KAAMqB,EAAsBU,EAAtBV,iBACXW,EAAcC,IAAW,OAADC,OAAAC,EAAA,EAAAD,CAAA,CAC1BE,cAAmC,WAApBpC,EAAKJ,WACpByC,YAAiC,YAApBrC,EAAKJ,YAAiD,SAArBI,EAAKH,aAFzB,GAAAyC,OAGtBtC,EAAKK,MAA8B,YAApBL,EAAKJ,YAAiD,UAArBI,EAAKH,cAE7D,OACIkB,EAAAC,EAAAC,cAAA,OAAKC,UAAWc,EAAaH,QAAS,kBAAIR,EAAiBrB,EAAKL,QA4HzD4C,EAxHG,WAAM,IAAAC,EACYC,mBAAShD,KADrBiD,EAAAR,OAAAS,EAAA,EAAAT,CAAAM,EAAA,GACblB,EADaoB,EAAA,GACHE,EADGF,EAAA,GAAAG,EAEUJ,mBAAS,GAFnBK,EAAAZ,OAAAS,EAAA,EAAAT,CAAAW,EAAA,GAEbE,EAFaD,EAAA,GAEJE,EAFIF,EAAA,GAAAG,EAGMR,mBAAS,GAHfS,EAAAhB,OAAAS,EAAA,EAAAT,CAAAe,EAAA,GAGbE,EAHaD,EAAA,GAGNE,EAHMF,EAAA,GAAAG,EAIEZ,oBAAS,GAJXa,EAAApB,OAAAS,EAAA,EAAAT,CAAAmB,EAAA,GAIbE,EAJaD,EAAA,GAIRE,EAJQF,EAAA,GAAAG,EAKMhB,mBAAS,GALfiB,EAAAxB,OAAAS,EAAA,EAAAT,CAAAuB,EAAA,GAKblD,EALamD,EAAA,GAKNC,EALMD,EAAA,GAaZlE,IACAA,EAAaoE,YAAa,WAL9BD,EAAS,SAACE,GAAD,OAAeA,EAAY,KAKkB,MA8F1D,OALItE,IACAuE,WAAW,kBAnDC,WACZ,IAAIC,EAAW7B,OAAA8B,EAAA,EAAA9B,CAAOZ,GACtByC,EAAYhE,QAAQ,SAACC,EAAMiE,GACvBF,EAAYE,GAAOpE,YAAc,SAErC+C,EAAYmB,GACZzE,GAAe,EA6CA4E,IAAU,KACzB3E,GAAY,GAIZwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cA9JV,SAAC6B,EAAQI,EAAM5C,GAAf,MAAyB,CACtC,CACIM,MAAO,UACPC,MAAOiC,GACT,CACElC,MAAO,QACPC,MAAOqC,GACT,CACEtC,MAAO,OACPC,MAAOR,EAAQC,KAsJN4D,CAASpB,EAAQI,EAAM5C,GAAOgB,IAAI,SAACvB,EAAKyB,GAAN,OAAYV,EAAAC,EAAAC,cAACmD,EAADlC,OAAAmC,OAAA,CAAU5C,IAAKA,GAASzB,OAE3Ee,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVqC,EAAKxC,EAAAC,EAAAC,cAACqD,EAAD,CAAY1C,kBA/FZ,WACdxC,OAAeC,EACfC,GAAe,EACfC,GAAa,EACbC,OAAaH,EAEbuD,EAAYnD,KACZuD,EAAW,GACXI,EAAS,GACTI,GAAO,GACPG,EAAS,MAqFiD5C,EAAAC,EAAAC,cAACsD,EAAD,CAAOlD,iBApD5C,SAAC4C,GACtB,GAAkC,WAA/B3C,EAAS2C,GAAOrE,aAA2D,YAA/B0B,EAAS2C,GAAOrE,YAA4D,UAAhC0B,EAAS2C,GAAOpE,cAA6BP,EAGxI,GAAIF,EAWA,CACA,IAAI2E,EAAW7B,OAAA8B,EAAA,EAAA9B,CAAOZ,GACtByC,EAAYE,GAAS,CACjBtE,GAAI2B,EAAS2C,GAAOtE,GACpBC,WAAY,UACZC,YAAa,QACbQ,KAAOiB,EAAS2C,GAAO5D,MAE3BuC,EAAYmB,GACZzE,GAAe,EACZF,EAAaiB,OAASiB,EAAS2C,GAAO5D,MACrC2C,EAAWD,EAAU,GAEN,IAAZA,IACCS,GAAO,GACPgB,cAAchF,IAElBsE,WAAW,kBA7DF,SAACW,GAClB,IAAIV,EAAW7B,OAAA8B,EAAA,EAAA9B,CAAOZ,GACtBmD,EAAW1E,QAAQ,SAACkE,GAChBF,EAAYE,GAAOrE,WAAa,WAEpCgD,EAAYmB,GACZzE,GAAe,EACfF,OAAeC,EAsDQqF,CAAa,CAACT,EAAM7E,EAAaO,MAAK,MAGrDmE,WAAW,kBAtDE,SAACW,GACtB,IAAIV,EAAW7B,OAAA8B,EAAA,EAAA9B,CAAOZ,GACtBmD,EAAW1E,QAAQ,SAACkE,GAChBF,EAAYE,GAAOpE,YAAc,SAErC+C,EAAYmB,GACZzE,GAAe,EACfF,OAAeC,EA+CQsF,CAAiB,CAACV,EAAM7E,EAAaO,MAAK,KAE7DyD,EAASD,EAAQ,OAjCJ,CACb/D,EAAekC,EAAS2C,GACxB,IAAIF,EAAW7B,OAAA8B,EAAA,EAAA9B,CAAOZ,GACtByC,EAAYE,GAAS,CACjBtE,GAAK2B,EAAS2C,GAAOtE,GACrBC,WAAa,UACbC,YAAc,QACdQ,KAAOiB,EAAS2C,GAAO5D,MAE3BuC,EAAYmB,KAuCqFzC,SAAUA,OCtQxGsD,SATE,SAAAhE,GAAkB,IAAhBiE,EAAgBjE,EAAhBiE,WACf,OACI9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeW,QAAS,kBAAIgD,GAAW,KAAtD,cCEGC,EALI,WAAM,IAAAtC,EACSC,oBAAS,GADlBC,EAAAR,OAAAS,EAAA,EAAAT,CAAAM,EAAA,GACduC,EADcrC,EAAA,GACLmC,EADKnC,EAAA,GAErB,OAAOqC,EAAShE,EAAAC,EAAAC,cAAC+D,EAAD,MAAgBjE,EAAAC,EAAAC,cAACgE,EAAD,CAAUJ,WAAYA,WCG3CK,MANf,WACE,OACEnE,EAAAC,EAAAC,cAACkE,EAAD,OCDJC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a6e174e0.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nimport './playboard.css'\n\nvar categoryMap = {\n    'apple': 'apple-card',\n    'apple_dark': 'apple-dark-card',\n    'apple_empty': 'apple-empty-card',\n    'lemon': 'lemon-card',\n    'orange': 'orange-card',\n    'orange_dark': 'orange-dark-card',\n    'watermelon': 'watermelon-card',\n    'watermelon_dark': 'watermelon-dark-card'\n}\n\nlet selectedCard = undefined\nlet clickEnabled = false\nlet initilized = false\nlet intervalId = undefined\n\nconst initilizeData = () =>{\n    const output =[\n        {\n            id: 0,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 1,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 2,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 3,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 4,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 5,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 6,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 7,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 8,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 9,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 10,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 11,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 12,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 13,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 14,\n            visibility: 'visible',\n            sideVisible: 'front'\n        },{\n            id: 15,\n            visibility: 'visible',\n            sideVisible: 'front'\n        }\n    ]\n    const categoryList = ['apple','apple_dark','apple_empty','watermelon_dark','watermelon','orange_dark','orange','lemon']\n    categoryList.forEach((item)=>{\n        let randomNumber  = Math.floor(Math.random()* 16)\n        while(output[randomNumber].card){\n            randomNumber = (randomNumber + 1) % 16\n        }\n        output[randomNumber].card = categoryMap[item]\n    })\n    categoryList.forEach((item)=>{\n        let randomNumber  = Math.floor(Math.random()* 16)\n        while(output[randomNumber].card){\n            randomNumber = (randomNumber + 1) % 16\n        }\n        output[randomNumber].card = categoryMap[item]\n    })\n    return output\n}\n\nconst getTime = (timer) => {\n    const sec = timer % 60\n    const min = parseInt(timer / 60)\n    return (min>9 ? min: \"0\" + min) + \" : \" + (sec >9 ? sec: \"0\" + sec)\n}\n\nconst scoreMap = (matches,count,timer) => [\n    {\n        title: 'Matches',\n        value: matches\n    },{\n        title: 'Turns',\n        value: count\n    },{\n        title: 'Time',\n        value: getTime(timer)\n    },\n]\n\nconst KeyValue = ({title,value}) =>{\n    return (\n        <div className=\"keyValueContainer\">\n            <div className=\"key\">{title}</div>\n            <div>{value}</div>\n        </div>\n    )\n}\n\nconst Board = ({cardClickHandler, elements}) => {\n    return elements.map((item) => {\n        return <Card key={item.id} item={item} cardClickHandler={cardClickHandler} />\n    })\n}\n\nconst WinnerCard = ({onStartAgainClick}) => {\n    return (\n        <div className=\"winner-container\">\n            <div className=\"winner\">You Win</div>\n            <div className=\"start-button\" onClick={onStartAgainClick}> Play Again</div>\n        </div>\n    )\n}\n\nconst Card = ({item, cardClickHandler}) => {\n    const cardClasses = classnames('card', {\n        'hidden-card': item.visibility === 'hidden',\n        'back-card': item.visibility === 'visible' && item.sideVisible === 'back',\n        [`${item.card}`] : item.visibility === 'visible' && item.sideVisible === 'front'\n    })\n    return(\n        <div className={cardClasses} onClick={()=>cardClickHandler(item.id)}/>\n    )\n}\n\nconst PlayBoard = () => {\n    const [elements, setElements] = useState(initilizeData())\n    const [matches, setMatches] = useState(0)\n    const [count, setCount] = useState(0)\n    const [won, setWon] = useState(false)\n    const [timer, setTimer] = useState(0)\n\n\n    const incrementTimer = () => {\n        setTimer((prevTimer) => prevTimer + 1)}\n \n\n    const startTimer = () =>{\n        if(!intervalId){\n            intervalId = setInterval( () => incrementTimer(), 1000)\n        }\n    }\n    startTimer()\n\n    const initilize = () => {\n        selectedCard = undefined\n        clickEnabled = false\n        initilized = false\n        intervalId = undefined\n    \n        setElements(initilizeData())\n        setMatches(0)\n        setCount(0)\n        setWon(false)\n        setTimer(0)\n    }\n\n        \n    const hideElements = (indexArray) =>{\n        let newElements = [...elements]\n        indexArray.forEach((index) =>{\n            newElements[index].visibility = 'hidden'\n        })\n        setElements(newElements)\n        clickEnabled = true\n        selectedCard = undefined\n    }\n\n    const flipBackElements = (indexArray) =>{\n        let newElements = [...elements]\n        indexArray.forEach((index) =>{\n            newElements[index].sideVisible = 'back'\n        })\n        setElements(newElements)\n        clickEnabled = true\n        selectedCard = undefined\n    }\n\n    const flipAll = () => {\n        let newElements = [...elements]\n        newElements.forEach((item, index) =>{\n            newElements[index].sideVisible = 'back'\n        })\n        setElements(newElements)\n        clickEnabled = true      \n    }\n\n    const cardClickHandler = (index)=>{\n        if(elements[index].visibility === 'hidden' || (elements[index].visibility === 'visible' && elements[index].sideVisible === 'front') || !clickEnabled){\n            return\n        }\n        if(!selectedCard){\n            selectedCard = elements[index]\n            let newElements = [...elements]\n            newElements[index] = {\n                id : elements[index].id,\n                visibility : 'visible',\n                sideVisible : 'front',\n                card : elements[index].card\n            } \n            setElements(newElements)\n        }\n        else{\n            let newElements = [...elements]\n            newElements[index] = {\n                id: elements[index].id,\n                visibility: 'visible',\n                sideVisible: 'front',\n                card : elements[index].card\n            } \n            setElements(newElements)\n            clickEnabled = false\n            if(selectedCard.card === elements[index].card){\n                setMatches(matches + 1)\n                // Login After Match Win\n                if(matches === 7){\n                    setWon(true)\n                    clearInterval(intervalId)\n                }\n                setTimeout(()=>hideElements([index,selectedCard.id]),1000)\n            }\n            else{\n                setTimeout(()=>flipBackElements([index,selectedCard.id]),1000)\n            }\n            setCount(count + 1)\n        }   \n    }\n\n    if(!initilized){\n        setTimeout(()=>flipAll(),2000)\n        initilized =true\n    }\n\n    return (\n        <div className='background-container'>\n            <div className=\"score-menu\">\n                {scoreMap(matches,count,timer).map((item,key)=><KeyValue key={key} {...item} />)}\n            </div>\n            <div className=\"playground\"> \n                {won? <WinnerCard onStartAgainClick={initilize}/>:<Board cardClickHandler={cardClickHandler} elements={elements}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default PlayBoard","import React from 'react'\n\nimport './homepage.css'\n\nconst HomePage = ({setStarted}) => {\n    return (\n        <div className=\"homepage-container\">\n            <div className=\"label-header\">Memory Match</div>\n            <div className=\"start-button\" onClick={()=>setStarted(true)}> Start </div>\n        </div>\n    )\n}\n\nexport default HomePage","import React, { useState } from 'react';\n\nimport PlayBoard from './../PlayBoard/playboard'\nimport HomePage from './../HomePage/homepage'\n\nconst MemoryGame = () => {\n    const [started, setStarted] = useState(false)\n    return started ?<PlayBoard /> : <HomePage setStarted={setStarted} />\n}\n\nexport default MemoryGame","import React from 'react';\nimport MemoryGame from './MemoryGame/memoryGame'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MemoryGame />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}