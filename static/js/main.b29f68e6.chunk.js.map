{"version":3,"sources":["PlayBoard/playboard.js","HomePage/homepage.js","MemoryGame/memoryGame.js","App.js","index.js"],"names":["categoryMap","selectedCard","undefined","clickEnabled","initilized","KeyValue","_ref","title","value","react_default","a","createElement","className","Board","_ref2","cardClickHandler","elements","map","item","playboard_Card","key","id","Card","_ref3","cardClasses","classnames","Object","defineProperty","hidden-card","visibility","back-card","sideVisible","concat","card","onClick","PlayBoard","_useState","useState","_useState2","slicedToArray","setElements","_useState3","_useState4","matches","setMatches","_useState5","_useState6","count","setCount","_useState7","_useState8","won","setWon","setTimeout","newElements","toConsumableArray","forEach","index","flipAll","scoreMap","playboard_KeyValue","assign","playboard_Board","indexArray","hideElements","flipBackElements","HomePage","setStarted","MemoryGame","started","PlayBoard_playboard","HomePage_homepage","App","memoryGame","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b29f68e6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport classnames from 'classnames'\n\nimport './playboard.css'\n\n// TODO : Need to implement Time Component.\n// TODO : Need to verify Sharing Link\n\n\nvar categoryMap = {\n    'apple': 'apple-card',\n    'apple_dark': 'apple-dark-card',\n    'apple_empty': 'apple-empty-card',\n    'lemon': 'lemon-card',\n    'orange': 'orange-card',\n    'orange_dark': 'orange-dark-card',\n    'watermelon': 'watermelon-card',\n    'watermelon_dark': 'watermelon-dark-card'\n}\n\nlet selectedCard = undefined\nlet clickEnabled = false\nlet initilized = false\nlet matchedCount = 0\n\n// TODO : Need to create Some logic here to randomize\nconst initilizeData = () =>{\n    return [\n        {\n            id: 0,\n            visibility: 'visible',\n            card : categoryMap['apple'],\n            sideVisible: 'front'\n        },{\n            id: 1,\n            visibility: 'visible',\n            card : categoryMap['lemon'],\n            sideVisible: 'front'\n        },{\n            id: 2,\n            visibility: 'visible',\n            card : categoryMap['apple_empty'],\n            sideVisible: 'front'\n        },{\n            id: 3,\n            visibility: 'visible',\n            card : categoryMap['apple'],\n            sideVisible: 'front'\n        },{\n            id: 4,\n            visibility: 'visible',\n            card : categoryMap['watermelon_dark'],\n            sideVisible: 'front'\n        },{\n            id: 5,\n            visibility: 'visible',\n            card : categoryMap['lemon'],\n            sideVisible: 'front'\n        },{\n            id: 6,\n            visibility: 'visible',\n            card : categoryMap['apple_dark'],\n            sideVisible: 'front'\n        },{\n            id: 7,\n            visibility: 'visible',\n            card : categoryMap['orange'],\n            sideVisible: 'front'\n        },{\n            id: 8,\n            visibility: 'visible',\n            card : categoryMap['watermelon_dark'],\n            sideVisible: 'front'\n        },{\n            id: 9,\n            visibility: 'visible',\n            card : categoryMap['watermelon'],\n            sideVisible: 'front'\n        },{\n            id: 10,\n            visibility: 'visible',\n            card : categoryMap['apple_dark'],\n            sideVisible: 'front'\n        },{\n            id: 11,\n            visibility: 'visible',\n            card : categoryMap['orange_dark'],\n            sideVisible: 'front'\n        },{\n            id: 12,\n            visibility: 'visible',\n            card : categoryMap['watermelon'],\n            sideVisible: 'front'\n        },{\n            id: 13,\n            visibility: 'visible',\n            card : categoryMap['orange'],\n            sideVisible: 'front'\n        },{\n            id: 14,\n            visibility: 'visible',\n            card : categoryMap['orange_dark'],\n            sideVisible: 'front'\n        },{\n            id: 15,\n            visibility: 'visible',\n            card : categoryMap['apple_empty'],\n            sideVisible: 'front'\n        }\n    ]\n}\n\nconst getTime = (timeLapsed) => {\n    const sec = timeLapsed % 60\n    const min = parseInt(timeLapsed / 60)\n    return min + \" : \" + sec\n}\n\n// TODO : Need to Add Sound Icons and Options. This can be done Later After Hosting Application.\nconst scoreMap = (matches,count) => [\n    {\n        title: 'Matches',\n        value: matches\n    },{\n        title: 'Turns',\n        value: count\n    },{\n        title: 'Time',\n        value: '00:00'\n    },\n]\n\nconst KeyValue = ({title,value}) =>{\n    return (\n        <div className=\"keyValueContainer\">\n            <div className=\"key\">{title}</div>\n            <div>{value}</div>\n        </div>\n    )\n}\n\nconst Board = ({cardClickHandler, elements}) => {\n    return elements.map((item) => {\n        return <Card key={item.id} item={item} cardClickHandler={cardClickHandler} />\n    })\n}\n\nconst Card = ({item, cardClickHandler}) => {\n    const cardClasses = classnames('card', {\n        'hidden-card': item.visibility === 'hidden',\n        'back-card': item.visibility === 'visible' && item.sideVisible === 'back',\n        [`${item.card}`] : item.visibility === 'visible' && item.sideVisible === 'front'\n    })\n    return(\n        <div className={cardClasses} onClick={()=>cardClickHandler(item.id)}/>\n    )\n}\n\nconst PlayBoard = () => {\n    const [elements, setElements] = useState(initilizeData())\n    const [matches, setMatches] = useState(0)\n    const [count, setCount] = useState(0)\n    const [won, setWon] = useState(false)\n        \n    const hideElements = (indexArray) =>{\n        let newElements = [...elements]\n        indexArray.forEach((index) =>{\n            newElements[index].visibility = 'hidden'\n        })\n        setElements(newElements)\n        clickEnabled = true\n        selectedCard = undefined\n    }\n\n    const flipBackElements = (indexArray) =>{\n        let newElements = [...elements]\n        indexArray.forEach((index) =>{\n            newElements[index].sideVisible = 'back'\n        })\n        setElements(newElements)\n        clickEnabled = true\n        selectedCard = undefined\n    }\n\n    const flipAll = () => {\n        let newElements = [...elements]\n        newElements.forEach((item, index) =>{\n            newElements[index].sideVisible = 'back'\n        })\n        setElements(newElements)\n        clickEnabled = true      \n    }\n\n    const cardClickHandler = (index)=>{\n        if(elements[index].visibility === 'hidden' || (elements[index].visibility === 'visible' && elements[index].sideVisible === 'front') || !clickEnabled){\n            return\n        }\n        if(!selectedCard){\n            selectedCard = elements[index]\n            let newElements = [...elements]\n            newElements[index] = {\n                id : elements[index].id,\n                visibility : 'visible',\n                sideVisible : 'front',\n                card : elements[index].card\n            } \n            setElements(newElements)\n        }\n        else{\n            let newElements = [...elements]\n            newElements[index] = {\n                id: elements[index].id,\n                visibility: 'visible',\n                sideVisible: 'front',\n                card : elements[index].card\n            } \n            setElements(newElements)\n            clickEnabled = false\n            if(selectedCard.card === elements[index].card){\n                setMatches(matches + 1)\n                if(matches === 7){\n                    setWon(true)\n                }\n                setTimeout(()=>hideElements([index,selectedCard.id]),1000)\n            }\n            else{\n                setTimeout(()=>flipBackElements([index,selectedCard.id]),1000)\n            }\n            setCount(count + 1)\n        }   \n    }\n\n    if(!initilized){\n        setTimeout(()=>flipAll(),1000)\n        initilized =true\n    }\n\n    return (\n        <div className='background-container'>\n            <div className=\"score-menu\">\n                {scoreMap(matches,count).map((item,key)=><KeyValue key={key} {...item} />)}\n            </div>\n            <div className=\"playground\"> \n                {won? <div className=\"winner\">You Win</div>:<Board cardClickHandler={cardClickHandler} elements={elements}/>}\n            </div>\n        </div>\n    )\n}\n\nexport default PlayBoard","import React from 'react'\n\nimport './homepage.css'\n\nconst HomePage = ({setStarted}) => {\n    return (\n        <div className=\"homepage-container\">\n            <div className=\"label-header\">Memory Match</div>\n            <div className=\"start-button\" onClick={()=>setStarted(true)}> Start </div>\n        </div>\n    )\n}\n\nexport default HomePage","import React, { useState } from 'react';\n\nimport PlayBoard from './../PlayBoard/playboard'\nimport HomePage from './../HomePage/homepage'\n\nconst MemoryGame = () => {\n    const [started, setStarted] = useState(false)\n    return started ?<PlayBoard /> : <HomePage setStarted={setStarted} />\n}\n\nexport default MemoryGame","import React from 'react';\nimport MemoryGame from './MemoryGame/memoryGame'\nimport './App.css';\n\nfunction App() {\n  return (\n    <MemoryGame />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}